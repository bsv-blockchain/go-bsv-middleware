version: "2"

# options for analysis running
run:
  # exit code when at least one issue was found, default is 1
  issues-exit-code: 1

  # include test files or not, default is true
  tests: true

  # by default isn't set. If set we pass it to "go list -mod={option}". From "go help modules":
  # If invoked with -mod=readonly, the go command is disallowed from the implicit
  # automatic updating of go.mod described above. Instead, it fails when any changes
  # to go.mod are needed. This setting is most useful to check that go.mod does
  # not need updates, such as in a continuous integration and testing system.
  # If invoked with -mod=vendor, the go command assumes that the vendor
  # directory holds the correct copies of dependencies and ignores
  # the dependency descriptions in go.mod.
  # modules-download-mode: readonly|release|vendor

  # Allow multiple parallel golangci-lint instances running.
  # If false (default) - golangci-lint acquires file lock on start.
  allow-parallel-runners: false

# output configuration options
output:
  # formats is now a mapping by format type (e.g., "text") — not a list
  # colored-line-number|line-number|json|tab|checkstyle|code-climate, default is "colored-line-number"
  formats:
    text:
      path: stdout
      # print lines of code with issue, default is true
      print-linter-name: true
      # print linter name in the end of issue text, default is true
      print-issued-lines: true

  # add a prefix to the output file references; default is no prefix
  path-prefix: ""
linters:
  # "disable-all: true" → replaced with "default: none"
  default: none
  # Enabled linters — migrated as-is
  # https://golangci-lint.run/usage/linters/#enabled-by-default
  enable:
    - bodyclose
    - copyloopvar
    - dogsled
    - errcheck
    - errorlint
    - exhaustive
    - gosec
    - govet
    - ineffassign
    - nolintlint
    - prealloc
    - revive
    - sqlclosecheck
    - staticcheck
    - unconvert
    - unused
    - wastedassign
    - wrapcheck
  settings:
    revive:
      rules:
        - name: exported
          exclude:
            - '**/testabilities/**'
            - '**/internal/**'
  exclusions:
    generated: lax
    rules:
      - linters:
          - bodyclose
          - errcheck
          - gosec
          - wrapcheck
        path: _test\.go
      - linters:
          - bodyclose
          - gosec
          - wrapcheck
        path: /testabilities/
      - linters:
          - gosec
        path: internal/hmac/
        text: weak cryptographic primitive
      - linters:
          - wrapcheck
        path: test/mocks
      - linters:
          - staticcheck
        text: 'SA1019:'
      - linters:
          - lll
        source: '^//go:generate '
      - path: (.+)\.go$
        text: Using the variable on range scope .* in function literal
      - path: (.+)\.go$
        text: should have a package comment
    paths:
      - .*\.my\.go$
      - lib/bad.go
      - .github
      - .make
      - dist
      - third_party$
      - builtin$
      - examples$
issues:
  # Maximum issues count per one linter. Set to 0 to disable. Default is 50.
  max-issues-per-linter: 0

  # Maximum count of issues with the same text. Set to 0 to disable. Default is 3.
  max-same-issues: 0

  # Show only new issues created after git revision `REV`
  new-from-rev: ""
severity:
  default: error
  rules:
    - linters:
        - dupl
      severity: info
formatters:
  exclusions:
    generated: lax
    paths:
      - third_party$
      - builtin$
      - examples$
