// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: auth_fetch.proto

package typescript

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Config struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Method        string                 `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`                                                                             // optional
	Headers       map[string]string      `protobuf:"bytes,2,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // optional
	Body          string                 `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`                                                                                 // optional (serialized as string)
	RetryCounter  int32                  `protobuf:"varint,4,opt,name=retryCounter,proto3" json:"retryCounter,omitempty"`                                                                // optional
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Config) Reset() {
	*x = Config{}
	mi := &file_auth_fetch_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_auth_fetch_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_auth_fetch_proto_rawDescGZIP(), []int{0}
}

func (x *Config) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *Config) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *Config) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *Config) GetRetryCounter() int32 {
	if x != nil {
		return x.RetryCounter
	}
	return 0
}

// Additional options for fetch call
type Options struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"`     // optional
	PrivKeyHex    string                 `protobuf:"bytes,2,opt,name=privKeyHex,proto3" json:"privKeyHex,omitempty"` // optional
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Options) Reset() {
	*x = Options{}
	mi := &file_auth_fetch_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Options) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Options) ProtoMessage() {}

func (x *Options) ProtoReflect() protoreflect.Message {
	mi := &file_auth_fetch_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Options.ProtoReflect.Descriptor instead.
func (*Options) Descriptor() ([]byte, []int) {
	return file_auth_fetch_proto_rawDescGZIP(), []int{1}
}

func (x *Options) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *Options) GetPrivKeyHex() string {
	if x != nil {
		return x.PrivKeyHex
	}
	return ""
}

type FetchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Config        *Config                `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`   // optional
	Options       *Options               `protobuf:"bytes,3,opt,name=options,proto3" json:"options,omitempty"` // optional
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchRequest) Reset() {
	*x = FetchRequest{}
	mi := &file_auth_fetch_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchRequest) ProtoMessage() {}

func (x *FetchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auth_fetch_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchRequest.ProtoReflect.Descriptor instead.
func (*FetchRequest) Descriptor() ([]byte, []int) {
	return file_auth_fetch_proto_rawDescGZIP(), []int{2}
}

func (x *FetchRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *FetchRequest) GetConfig() *Config {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *FetchRequest) GetOptions() *Options {
	if x != nil {
		return x.Options
	}
	return nil
}

type FetchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        int32                  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	StatusText    string                 `protobuf:"bytes,2,opt,name=statusText,proto3" json:"statusText,omitempty"`
	Headers       map[string]string      `protobuf:"bytes,3,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Body          string                 `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchResponse) Reset() {
	*x = FetchResponse{}
	mi := &file_auth_fetch_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchResponse) ProtoMessage() {}

func (x *FetchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auth_fetch_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchResponse.ProtoReflect.Descriptor instead.
func (*FetchResponse) Descriptor() ([]byte, []int) {
	return file_auth_fetch_proto_rawDescGZIP(), []int{3}
}

func (x *FetchResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *FetchResponse) GetStatusText() string {
	if x != nil {
		return x.StatusText
	}
	return ""
}

func (x *FetchResponse) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *FetchResponse) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

type CleanUpRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CleanUpRequest) Reset() {
	*x = CleanUpRequest{}
	mi := &file_auth_fetch_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CleanUpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CleanUpRequest) ProtoMessage() {}

func (x *CleanUpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auth_fetch_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CleanUpRequest.ProtoReflect.Descriptor instead.
func (*CleanUpRequest) Descriptor() ([]byte, []int) {
	return file_auth_fetch_proto_rawDescGZIP(), []int{4}
}

func (x *CleanUpRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type CleanUpResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CleanUpResponse) Reset() {
	*x = CleanUpResponse{}
	mi := &file_auth_fetch_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CleanUpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CleanUpResponse) ProtoMessage() {}

func (x *CleanUpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auth_fetch_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CleanUpResponse.ProtoReflect.Descriptor instead.
func (*CleanUpResponse) Descriptor() ([]byte, []int) {
	return file_auth_fetch_proto_rawDescGZIP(), []int{5}
}

var File_auth_fetch_proto protoreflect.FileDescriptor

const file_auth_fetch_proto_rawDesc = "" +
	"\n" +
	"\x10auth_fetch.proto\x12\n" +
	"typescript\"\xcf\x01\n" +
	"\x06Config\x12\x16\n" +
	"\x06method\x18\x01 \x01(\tR\x06method\x129\n" +
	"\aheaders\x18\x02 \x03(\v2\x1f.typescript.Config.HeadersEntryR\aheaders\x12\x12\n" +
	"\x04body\x18\x03 \x01(\tR\x04body\x12\"\n" +
	"\fretryCounter\x18\x04 \x01(\x05R\fretryCounter\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"E\n" +
	"\aOptions\x12\x1a\n" +
	"\bclientId\x18\x01 \x01(\tR\bclientId\x12\x1e\n" +
	"\n" +
	"privKeyHex\x18\x02 \x01(\tR\n" +
	"privKeyHex\"{\n" +
	"\fFetchRequest\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\x12*\n" +
	"\x06config\x18\x02 \x01(\v2\x12.typescript.ConfigR\x06config\x12-\n" +
	"\aoptions\x18\x03 \x01(\v2\x13.typescript.OptionsR\aoptions\"\xd9\x01\n" +
	"\rFetchResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\x05R\x06status\x12\x1e\n" +
	"\n" +
	"statusText\x18\x02 \x01(\tR\n" +
	"statusText\x12@\n" +
	"\aheaders\x18\x03 \x03(\v2&.typescript.FetchResponse.HeadersEntryR\aheaders\x12\x12\n" +
	"\x04body\x18\x04 \x01(\tR\x04body\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\",\n" +
	"\x0eCleanUpRequest\x12\x1a\n" +
	"\bclientId\x18\x01 \x01(\tR\bclientId\"\x11\n" +
	"\x0fCleanUpResponse2\x8d\x01\n" +
	"\tAuthFetch\x12<\n" +
	"\x05fetch\x12\x18.typescript.FetchRequest\x1a\x19.typescript.FetchResponse\x12B\n" +
	"\acleanUp\x12\x1a.typescript.CleanUpRequest\x1a\x1b.typescript.CleanUpResponseBlZjgithub.com/bsv-blockchain/go-bsv-middleware/pkg/internal/regressiontests/internal/typescriptnew;typescriptb\x06proto3"

var (
	file_auth_fetch_proto_rawDescOnce sync.Once
	file_auth_fetch_proto_rawDescData []byte
)

func file_auth_fetch_proto_rawDescGZIP() []byte {
	file_auth_fetch_proto_rawDescOnce.Do(func() {
		file_auth_fetch_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_auth_fetch_proto_rawDesc), len(file_auth_fetch_proto_rawDesc)))
	})
	return file_auth_fetch_proto_rawDescData
}

var file_auth_fetch_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_auth_fetch_proto_goTypes = []any{
	(*Config)(nil),          // 0: typescript.Config
	(*Options)(nil),         // 1: typescript.Options
	(*FetchRequest)(nil),    // 2: typescript.FetchRequest
	(*FetchResponse)(nil),   // 3: typescript.FetchResponse
	(*CleanUpRequest)(nil),  // 4: typescript.CleanUpRequest
	(*CleanUpResponse)(nil), // 5: typescript.CleanUpResponse
	nil,                     // 6: typescript.Config.HeadersEntry
	nil,                     // 7: typescript.FetchResponse.HeadersEntry
}
var file_auth_fetch_proto_depIdxs = []int32{
	6, // 0: typescript.Config.headers:type_name -> typescript.Config.HeadersEntry
	0, // 1: typescript.FetchRequest.config:type_name -> typescript.Config
	1, // 2: typescript.FetchRequest.options:type_name -> typescript.Options
	7, // 3: typescript.FetchResponse.headers:type_name -> typescript.FetchResponse.HeadersEntry
	2, // 4: typescript.AuthFetch.fetch:input_type -> typescript.FetchRequest
	4, // 5: typescript.AuthFetch.cleanUp:input_type -> typescript.CleanUpRequest
	3, // 6: typescript.AuthFetch.fetch:output_type -> typescript.FetchResponse
	5, // 7: typescript.AuthFetch.cleanUp:output_type -> typescript.CleanUpResponse
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_auth_fetch_proto_init() }
func file_auth_fetch_proto_init() {
	if File_auth_fetch_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_auth_fetch_proto_rawDesc), len(file_auth_fetch_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_auth_fetch_proto_goTypes,
		DependencyIndexes: file_auth_fetch_proto_depIdxs,
		MessageInfos:      file_auth_fetch_proto_msgTypes,
	}.Build()
	File_auth_fetch_proto = out.File
	file_auth_fetch_proto_goTypes = nil
	file_auth_fetch_proto_depIdxs = nil
}
